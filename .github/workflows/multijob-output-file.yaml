name: Multi-job output file

on:
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      var: ${{ steps.output.outputs.var }}
    steps:
      - name: Read output file
        shell: python
        run: |
          import os

          output_file = os.environ["GITHUB_OUTPUT"]
          with open(output_file) as f:
              contents = f.read()
          
          print(contents)

      - name: Write to output file
        id: output
        shell: python
        run: |
          import os

          output_file = os.environ["GITHUB_OUTPUT"]
          with open(output_file, "a") as f:
              f.write("var=hello\n")

  job2:
    runs-on: ubuntu-latest
    needs: [job1]
    outputs:
      var: ${{ steps.output.outputs.var }}
    steps:
      - name: Read output file
        shell: python
        run: |
          import os

          output_file = os.environ["GITHUB_OUTPUT"]
          with open(output_file) as f:
              contents = f.read()
          
          print(contents)

      - name: Write to output file
        id: output
        shell: python
        run: |
          import os

          output_file = os.environ["GITHUB_OUTPUT"]
          with open(output_file, "a") as f:
              f.write("var=world\n")

  print-vars:
    runs-on: ubuntu-latest
    needs: [job1, job2]
    steps:
      - shell: python
        run: |
          import os

          var1 = os.environ["VAR1"]
          var2 = os.environ["VAR2"]

          print(var1, var2)
        env:
          VAR1: ${{ needs.job1.outputs.var }}
          VAR2: ${{ needs.job2.outputs.var }}
