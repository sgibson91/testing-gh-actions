name: triple chained job

on:
  workflow_dispatch:

jobs:
  set-matrices:
    runs-on: ubuntu-latest
    outputs:
      support-matrix: ${{ env.support-matrix }}
      staging-matrix: ${{ env.staging-matrix }}
      prod-matrix: ${{ env.prod-matrix }}
    
    steps:
      - id: set_matrices
        shell: python
        run: |
          import os
          import json

          colours = ["red", "blue", "yellow"]
          env_file = os.environ["GITHUB_ENV"]

          support_matrix = []
          staging_matrix = []
          prod_matrix = []

          for colour in colours:
              support_matrix.append({"cluster_name": colour})
              staging_matrix.append({"cluster_name": colour, "hub_name": "staging"})
              prod_matrix.append({"cluster_name": colour, "hub_name": "prod"})

          with open(env_file, "a") as f:
              f.write(f"support-matrix={json.dumps(support_matrix)}\n")
              f.write(f"staging-matrix={json.dumps(staging_matrix)}\n")
              f.write(f"prod-matrix={json.dumps(prod_matrix)}\n")

  upgrade-support:
    runs-on: ubuntu-latest
    needs: [set-matrices]
    strategy:
      fail-fast: false
      matrix:
        jobs: ${{ fromJson(needs.set-matrices.outputs.support-matrix) }}
    steps:
      - run: echo "${{ matrix.jobs.cluster_name }}"
  
  upgrade-staging:
    runs-on: ubuntu-latest
    needs: [set-matrices, upgrade-support]
    strategy:
      fail-fast: false
      matrix:
        jobs: ${{ fromJson(needs.set-matrices.outputs.staging-matrix) }}
    if: |
      needs.set-matrices.result == 'success'
    steps:
      - run: echo "${{ matrix.jobs.cluster_name }} ${{ matrix.jobs.hub_name }}"

  upgrade-prod:
    runs-on: ubuntu-latest
    needs: [set-matrices, upgrade-staging]
    strategy:
      fail-fast: false
      matrix:
        jobs: ${{ fromJson(needs.set-matrices.outputs.prod-matrix) }}
    if: |
      needs.set-matrices.result == 'success' &&
      needs.upgrade-staging.result == 'success'
    steps:
      - run: echo "${{ matrix.jobs.cluster_name }} ${{ matrix.jobs.hub_name }}"
