name: "[updated] Comment GitHub Actions link on a merged PR"

on:
  push:
    branches:
      - main

jobs:
  get-pr-number:
    runs-on: ubuntu-latest
    outputs:
      continue-workflow: ${{ steps.get-pr-number.outputs.continue-workflow }}
      pr-number: ${{ steps.get-pr-number.outputs.pr-number }}
    steps:
      - name: Echo PR number
        id: get-pr-number
        shell: python
        run: |
          import re

          commit_msg = r"""${{ github.event.head_commit.message }}"""
          print(f"::set-output name=continue-workflow::{'Merge pull request' in commit_msg}")

          match = re.search('(?<=#)[0-9]*', commit_msg)
          if match is not None:
              pr_number = match.group(0)
              print(f"::set-output name=pr-number::{pr_number}")
          else:
              print(f"::set-output name=pr-number::{None}")

  get-workflow-url:
    runs-on: ubuntu-latest
    needs: [get-pr-number]
    if: needs.get-pr-number.outputs.continue-workflow == 'True'
    permissions:
      actions: read
    outputs:
      workflow-url: ${{ steps.get-workflow-url.outputs.workflow-url }}
    steps:
      - name: Install ghapi to interact with the GitHub REST API via Python
        run: |
          pip install ghapi

      - id: get-workflow-url
        shell: python
        run: |
          from datetime import datetime
          from ghapi.all import GhApi, paged

          today = datetime.now().strftime("%Y-%m-%d")

          owner, repo = r"""${{ github.repository }}""".split("/")
          github_token = r"""${{ secrets.GITHUB_TOKEN }}"""
          api = GhApi(token=github_token)

          # List all workflow runs for the repository
          all_workflow_runs = paged(
              api.actions.list_workflow_runs_for_repo,
              owner=owner,
              repo=repo,
              branch=r"""${{ env.BRANCH }}""",
              event=r"""${{ env.EVENT }}""",
              per_page=100,
              created=f">={today}",
          )

          for wf_runs in all_workflow_runs:
              workflow_url = next(
                  (
                      workflow_run.html_url
                      for workflow_run in wf_runs.workflow_runs
                      if workflow_run.name == r"""${{ env.WORKFLOW_NAME }}"""
                      and workflow_run.head_commit.message == r"""${{ github.event.head_commit.message }}"""
                  ),
                  False,
              )
              if workflow_url:
                  break

          print(f"::set-output name=workflow-url::{workflow_url}")
        env:
          BRANCH: "main"
          EVENT: "push"
          WORKFLOW_NAME: "Receive PR"

  add-pr-comment:
    runs-on: ubuntu-latest
    needs: [get-pr-number, get-workflow-url]
    if: |
      (needs.get-pr-number.outputs.continue-workflow == 'True')
      && (needs.get-workflow-url.outputs.workflow-url != 'False')
    permissions:
      pull-requests: write
    steps:
      - name: Comment on closed PR with GitHub Actions link
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var PR_NUMBER = process.env.PR_NUMBER;
            var WORKFLOW_URL = process.env.WORKFLOW_URL;

            github.rest.issues.createComment({
              issue_number: `${PR_NUMBER}`,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `:tada::tada::tada::tada:\n\nMonitor the deployment of the hubs here :point_right: ${WORKFLOW_URL}`
            })
        env:
          PR_NUMBER: "${{ needs.get-pr-number.outputs.pr-number }}"
          WORKFLOW_URL: "${{ needs.get-workflow-url.outputs.workflow-url}}"
